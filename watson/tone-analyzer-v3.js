// Autogenerated. DO NOT MODIFY
const _ToneAnalyzerV3 = require('watson-developer-cloud/tone-analyzer/v3-generated')

class ToneAnalyzerV3 {
  constructor (name) {
    this.name = name
    this.secrets = {
      url: { valueFrom: { secretKeyRef: { name: `binding-${name}`, key: 'url' } } },
      apikey: { valueFrom: { secretKeyRef: { name: `binding-${name}`, key: 'apikey' } } }
    }
  }
  async tone (params, url, apikey) {
    return new Promise((resolve, reject) => {
      if (this.delegate === undefined) {
        this.delegate = new _ToneAnalyzerV3({ version: '2018-05-01', iam_apikey: apikey, url })
      }
      this.delegate.tone(params, (err, res) => {
        if (err) {
          return reject(err)
        }
        return resolve(res)
      })
    })
  }
  async toneChat (params, url, apikey) {
    return new Promise((resolve, reject) => {
      if (this.delegate === undefined) {
        this.delegate = new _ToneAnalyzerV3({ version: '2018-05-01', iam_apikey: apikey, url })
      }
      this.delegate.toneChat(params, (err, res) => {
        if (err) {
          return reject(err)
        }
        return resolve(res)
      })
    })
  }

  _yaml (archive) {
    const svc = {
      apiVersion: 'ibmcloud.seed.ibm.com/v1beta1',
      kind: 'Service',
      metadata: {
        name: this.name
      },
      spec: {
        service: 'tone-analyzer',
        plan: 'lite',
        servicetype: 'IAM'
      }
    }
    archive.addYaml(svc, this.name + '-svc.yaml')
  }
}

module.exports = ToneAnalyzerV3
